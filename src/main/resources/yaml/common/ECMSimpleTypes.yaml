components:
  parameters:
    CommonContextQueryParameterType:
      name: commonContext
      in: header
      description: 'Common context '
      required: true
      schema:
        $ref: 'common/common.yaml#/components/schemas/CommonContextType'
  schemas:

    # Objekt pro seznamu operací v košíku pro autorizaci, kromě autorizační aspekty - typ předmentu a zda je prefferovaný
    OperationBasketDataForSignType:
      description: Objekt pro vystavení seznamu operací v košíku pro autorizaci, kromě onformaci o operaci obsahuje autorizační aspekty - typ předmentu a zda je prefferovaný
      type: object
      required:
        - operations
        - authorizationMethods
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationDataType'
        authorizationMethods:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationMethodType'

    # Objekt pro vystavení operace pro autorizaci, kromě autorizační aspekty - typ předmentu a zda je prefferovaný
    OperationDataForSignType:
      description: Objekt pro vystavení operace pro autorizaci, kromě informaci o operaci obsahuje autorizační aspekty - typ předmentu a zda je preferovaný
      type: object
      required:
        - operation
        - authorizationMethods
      properties:
        operation:
          $ref: '#/components/schemas/OperationDataType'
        authorizationMethods:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationMethodType'


    # Objekt pro autorizační aspekty - typ předmentu a zda je prefferovaný
    AuthorizationMethodType:
      type: object
      required:
        - securityMethod
        - isPrefferedsecurityMethod
      properties:
        securityMethod:
          $ref: '#/components/schemas/SecurityToolType'
        isPrefferedsecurityMethod:
          type: boolean
    # Objekt data pro operaci bez autorizačních aspektů
    OperationDataListType:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationDataSimpleType'
    # Objekt data pro operaci zobrazená v seznamu
    OperationDataSimpleType:
      type: object
      required:
        - operationId
        - operationKind
        - frameContractId
      properties:
        operationId:
          $ref: '#/components/schemas/OperationIdType'
        operationKind:
          $ref: '#/components/schemas/OperationKindType'
        frameContractId:
          $ref: 'commonSimpleTypes.yaml#/components/schemas/FrameContractIdType'
        amount:
          $ref: '#/components/schemas/OperationAmountType'
        status:
          $ref: '#/components/schemas/OperationStatusType'
        valutaDate:
          $ref: '#/components/schemas/ValutaDateType'
        disponentSignatureNeeded:
          type: boolean
          description: 'True if disponent signature is missing and disponent has a rights to sign'
    # Objekt data pro vytvoření operace
    PostOperationDataType:
      type: object
      required:
        - operationKind
        - frameContractId
        - operationDetail
        - manualSignature
      properties:
        operationKind:
          $ref: '#/components/schemas/OperationKindType'
        frameContractId:
          $ref: 'commonSimpleTypes.yaml#/components/schemas/FrameContractIdType'
        amount:
          $ref: '#/components/schemas/OperationAmountType'
        valutaDate:
          $ref: '#/components/schemas/ValutaDateType'
        manualSignature:
          $ref: '#/components/schemas/ManualSignatureType'
        operationDetail:
          type: object

    # Objekt data pro operaci bez autorizačních aspektů
    OperationDataType:
      type: object
      required:
        - operationMetaData
      properties:
        operationMetaData:
          $ref: '#/components/schemas/OperationType'
        operationAttributes:
          $ref: '#/components/schemas/OperationAttributesType'


    OperationType:
      required:
        - operationId
        - operationKind
        - operationDetail
        - frameContractId
      properties:
        operationId:
          $ref: '#/components/schemas/OperationIdType'
        operationKind:
          $ref: '#/components/schemas/OperationKindType'
        frameContractId:
          $ref: 'commonSimpleTypes.yaml#/components/schemas/FrameContractIdType'
        amount:
          $ref: '#/components/schemas/OperationAmountType'
        status:
          $ref: '#/components/schemas/OperationStatusType'
        valutaDate:
          $ref: '#/components/schemas/ValutaDateType'
        createdByBankerLogin:
          type: string
        dateTimeCanceled:
          $ref: '#/components/schemas/DateTimeCanceledType'
        dateTimeCreated:
          $ref: '#/components/schemas/DateTimeCreatedType'
        dateTimeReady:
          $ref: '#/components/schemas/DateTimeReadyType'
        dateTimeSigned:
          $ref: '#/components/schemas/DateTimeSignedType'
        dateTimeVerified:
          $ref: '#/components/schemas/DateTimeVerifiedType'
        verifiedByBankerLogin:
          type: string
        operationDetail:
          type: object
        paperScanId:
          $ref: '#/components/schemas/OperationPaperScanIdType'
        operationSignatures:
          type: array
          items:
            $ref: '#/components/schemas/OperationSignatureType'

    OperationAttributesType:
      type: object

    OperationSignatureType:
      type: object
      properties:
        createdByBankerLogin:
          type: string
        challengeProcessID:
          type: number
        #TODO ověřit správně v datovém modelu
        manualSignatureCheck:
          type: boolean
        processDateTime:
          type: string
          format: date-time
        SezamSecToolID:
          type: string

    OperationIdType:
      type: integer
      description: 'Id operace'
      format: int32

    OperationKindType:
      type: string
      description: 'Typ aktivní operace (jednorázová platba, nákup  papírů)'


    SecurityToolType:
      type: string
      description: 'Bezpečnostní metoda autorizace (SMS, mToken. ...)'
      #TODO Ověřit správný výčet SecurityTool securityDeviceTypeId a hlavně ManualSignature a SMS_TEL
      enum:
        - MTOKEN
        - SMS_EB
        - SMS_TEL
        - HWTOKEN
        - MTOKEN_OFFLINE
        - MANUAL_SIGNATURE


    ManualSignatureType:
      type: boolean
      description: 'Přiznak zda se bude operace ověřovat manuálním papírovám podpisem'

    OperationPaperScanSimpleType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OperationPaperScanIdType'
        status:
          $ref: '#/components/schemas/OperationPaperScanStatusType'
        paperScanURL:
          $ref: '#/components/schemas/PaperScanURIType'

      description: 'Informace o scanu papíropvého pokynu bez binárního obsahu'

    OperationPaperScanType:
      type: object
      properties:
        scanInfo:
          $ref: '#/components/schemas/OperationPaperScanSimpleType'
        data:
          type: string
          format: byte
          description: Base64-encoded contents of image

      description: 'Binární obsah scanu podpisu'

    OperationStatusType:
      type: string
      description: 'Stav operace v ECM (VYtvořená, částečne podepsaná podepsaná, ...)'
      #TODO Ověřit správný výčet OperationStatusType WAIT_FOR_MANUAL_SIGNATURE_CHECK
      enum:
        - CREATED
        - PARTIALY_SIGNED
        - SIGNED
        - WAIT_FOR_MANUAL_SIGNATURE_CHECK
        - IN_CORE_PROCESS
        - PROCESSED
        - CANCELED
    OperationAmountType:
      type: number
      description: 'Anmount of the operation'
    ValutaDateType:
      type: string
      format: date
      description: 'Valuta of the operation'
    ChallengeIdType:
      type: number
      description: 'Challenge id created in SEZAM'


    DateTimeCanceledType:
      type: string
      format: date-time
      description: 'Cancel time of the operation'
    DateTimeCreatedType:
      type: string
      format: date-time
      description: 'Created time of the operation'
    DateTimeReadyType:
      type: string
      format: date-time
      description: 'Ready time of the operation'
    DateTimeSignedType:
      type: string
      format: date-time
      description: 'Signture time of the operation'
    DateTimeVerifiedType:
      type: string
      format: date-time
      description: 'Verified time of the operation'

    OperationPaperScanIdType:
      type: integer
      description: 'Id of operation paper scan '
      format: int32

    OperationPaperScanStatusType:
      type: string
      description: 'Paper scan status'
      enum:
        - CREATED
        - USED
        - VERIFIED
        - CANCELED

    PaperScanURIType:
      type: string
      description: 'Paper scan URI in DMS system'

    #----------------ECM DISPO SIMPLE TYPES-------#
    #DISPONENT#
    DisponentIdType:
      type: integer
      description: 'ECM disponent id'
      format: int32

    DisponentNameType:
      type: string
      description: 'Name of disponent'
      example: 'John Dee'

    DisponentNoteType:
      type: string
      description: 'Note to disponent'

    DisponentPersonExternalIdNameType:
      type: string
      description: 'Disponents (person) Id from external system'
      example: 'ABC123456'

    DisponentPersonExternalSystemIdNameType:
      type: string
      description: 'The external system name from which the person external Id is taken'
      example: 'SYSTEM-ABC'

    DisponentPersonChannelsIdIdType:
      type: integer
      description: 'Person channel Id'
      format: int32

    #DISPOSITION#
    DispositionIdType:
      type: integer
      description: 'ECM disposition id'
      format: int32

    DispositionValidityType:
      type: boolean
      description: 'Disposition validity'


    DispositionValidSinceType:
      type: date
      description: 'date since the disposition is valid'

    DispositionValidUntilType:
      type: date
      description: 'due date determines disposition is valid to'

    DispositionPeremissionGroupType:
      type: object
      properties:
        dispositionPeremissionGroupCode:
          type: integer
          description: 'Disposition peremission group code'
          format: int32
          example: 'A'

        dispositionPeremissionGroupName:
          type: string
          description: 'Disposition peremission group name'
          example: 'Active operations'

        dispositionPeremissionGroupNote:
          type: string
          description: 'Disposition peremission group note'

        dispositionPeremissionGroupValidity:
          type: boolean
          description: 'Disposition peremission group name validity'


    #FRAME-CONTRACT#
    FrameContractIdType:
      $ref: 'commonSimpleTypes.yaml#/components/schemas/FrameContractIdType'

    FrameContractNameType:
      type: string
      description: 'Frame contract name'

    FrameContractHolderExternalIdType:
      type: string
      description: 'Frame contact holder (person) Id from external system'

    FrameContractHolderExternalSystemIdType:
      type: string
      description: 'The external system name from which the holder external Id is taken'

    FramecontractHolderChannelsIdType:
      type: int32
      description: 'Holder channel Id'

    FrameContractValidityType:
      type: boolean
      description: 'Validity of Frame contract'

    #PRODUCT -AKA- DISPOSITION OBJECT#
    ProductIdType:
      type: integer
      description: 'ECM product id'
      format: int32

    ProductExternalIdType:
      type: string
      description: 'Product Id from external system'

    ProductExternalSystemIdType:
      type: string
      description: 'The external system name from which the product external Id is taken'

    ProductChannelsIdType:
      type: int32
      description: 'Product channel Id'

    ProductNoteType:
      type: string
      description: 'Product note'

    ProductTypeIdType:
      type: string
      enum:
        - F
        - P

    #SECURITY-TOOL#
    SecurityToolIdType:
      type: integer
      description: 'ECM security tool id'
      format: int32


    SecurityToolTypeIdType:
      type: integer
      description: 'ECM security tool type id'
      format: int32
    #SIGNATURE-GROUP#
    SignatureGroupIdType:
      type: integer
      description: 'ECM signature group id'
      format: int32

    #LIMIT#
    LimitIdType:
      type: integer
      description: 'ECM limit id'
      format: int32


    #----------------ECM DISPO POST / PUT PARAMETERS--------#
    PostDisponentDataType:
      type: object
      #TODO

    PutDisponentDataType:
      type: object
      properties:
        disponent:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/DisponentDataType'

    PostCheckDispoAndLimitsDataType:
      type: object
      #TODO

    CheckDispoAndLimitsRequestDataType:
      type: object
      #TODO

    PostDispositionDataType:
      type: object
      #TODO

    PutDispositionDataType:
      type: object
      properties:
        disposition:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/DispositionDataType'

    PostSecurityToolDataType:
      type: object
      #TODO

    PutSecurityToolDataType:
      type: object
      properties:
        securityTool:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/SecurityToolDataType'

    PostFrameContractDataType:
      type: object
      #TODO

    PutFrameContractDataType:
      type: object
      properties:
        frameContract:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/FrameContractDataType'

    PostProductDataType:
      type: object
        #TODO

    PutProductDataType:
      type: object
      properties:
        product:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/ProductDataType'


    PostSignatureGroupDataType:
      type: object
        #TODO

    PutSignatureGroupDataType:
      type: object
      properties:
        signatureGroup:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/SignatureGroupDataType'

    PutSecurityToolTypeDataType:
      type: object
      properties:
        disponent:
          $ref: 'common/ECMSimpleTypes.yaml#/components/schemas/SecurityToolTypeDataType'


    #----------------ECM DISPO SIMPLE OBJECTS------------#

    DisponentDataType:
      type: object
      description: 'Disponent object'
      properties:
        disponentId:
          $ref: '#/components/schemas/DisponentIdType'


    DispositionDataType:
      type: object
      description: 'Disposition object'
      properties:
        dispositionId:
          $ref: '#/components/schemas/DispositionIdType'
        #TODO Doplnit další dle LDM

    SecurityToolDataType:
      type: object
      description: 'Security tool object'
      properties:
        securityToolId:
          $ref: '#/components/schemas/SecurityToolIdType'
        type:
          $ref: '#/components/schemas/SecurityToolType'
          #TODO Doplnit další dle LDM

    FrameContractDataType:
      type: object
      description: 'Frame contract object'
      properties:
        frameContractId:
          $ref: 'commonSimpleTypes.yaml#/components/schemas/FrameContractIdType'
        #TODO Doplnit další dle LDM

    ProductDataType:
      type: object
      description: 'Product object'
      properties:
        productId:
          $ref: '#/components/schemas/ProductIdType'
        #TODO Doplnit další dle LDM

    SignatureGroupDataType:
      type: object
      description: 'Signature group object'
      properties:
        signatureGroupId:
          $ref: '#/components/schemas/SignatureGroupIdType'
        #TODO Doplnit další dle LDM

    SecurityToolTypeDataType:
      type: object
      description: 'Security tool type object'
      properties:
        securityToolTypeId:
          $ref: '#/components/schemas/SecurityToolTypeId'
        #TODO Doplnit další dle LDM

    LimitCounterDataType:
      type: object
      description: 'Limit counter object'
      properties:
        limitId:
          $ref: '#/components/schemas/LimitIDType'
        #TODO Doplnit další dle LDM

